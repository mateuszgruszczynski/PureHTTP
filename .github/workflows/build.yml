name: Build PureHTTP

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ created ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            rust_target: aarch64-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Ubuntu)
        if: matrix.platform.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.rust_target }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform.rust_target }}

      - name: Install Tauri CLI
        run: cargo install tauri-cli --version "^2.0" --locked

      - name: Build application (Linux)
        if: matrix.platform.os == 'ubuntu-latest'
        run: cargo tauri build --target ${{ matrix.platform.rust_target }} --bundles deb,rpm

      - name: Build application (macOS)
        if: matrix.platform.os == 'macos-latest'
        run: cargo tauri build --target ${{ matrix.platform.rust_target }} --bundles dmg,app
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

      - name: Build application (Windows)
        if: matrix.platform.os == 'windows-latest'
        run: cargo tauri build --target ${{ matrix.platform.rust_target }} --bundles nsis,msi

      - name: Upload artifacts (Linux)
        if: matrix.platform.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: purehttp-linux-x86_64
          path: |
            target/${{ matrix.platform.rust_target }}/release/bundle/deb/PureHTTP_*.deb
            target/${{ matrix.platform.rust_target }}/release/bundle/rpm/PureHTTP_*.rpm

      - name: Upload artifacts (macOS x86_64)
        if: matrix.platform.os == 'macos-latest' && matrix.platform.rust_target == 'x86_64-apple-darwin'
        uses: actions/upload-artifact@v4
        with:
          name: purehttp-macos-x86_64
          path: |
            target/${{ matrix.platform.rust_target }}/release/bundle/dmg/PureHTTP_*.dmg
            target/${{ matrix.platform.rust_target }}/release/bundle/macos/PureHTTP.app

      - name: Upload artifacts (macOS ARM64)
        if: matrix.platform.os == 'macos-latest' && matrix.platform.rust_target == 'aarch64-apple-darwin'
        uses: actions/upload-artifact@v4
        with:
          name: purehttp-macos-arm64
          path: |
            target/${{ matrix.platform.rust_target }}/release/bundle/dmg/PureHTTP_*.dmg
            target/${{ matrix.platform.rust_target }}/release/bundle/macos/PureHTTP.app

      - name: Upload artifacts (Windows)
        if: matrix.platform.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: purehttp-windows-x86_64
          path: |
            target/${{ matrix.platform.rust_target }}/release/bundle/msi/PureHTTP_*.msi
            target/${{ matrix.platform.rust_target }}/release/bundle/nsis/PureHTTP_*.exe

  release:
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            PureHTTP_*.deb
            PureHTTP_*.rpm
            PureHTTP_*.dmg
            PureHTTP_*.msi
            PureHTTP_*.exe